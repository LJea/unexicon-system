#!/bin/bash
#
# /etc/NetworkManager/dispatcher.d/XX-unit
# /etc/ppp/ip-up.d/XX-unit.sh
# /etc/ppp/ip-down.d/XX-unit.sh
# /etc/ppp/ipv6-up.d/XX-unit.sh
# /etc/ppp/ipv6-down.d/XX-unit.sh
# /usr/lib/dhcpcd/dhcpcd-hooks/XX-unit
#
# This script is for interfaces being established by NetworkManager
# and those that are being established by PPTPD or PPPOED.  We need
# to add these interfaces to the routing daemon but we restrict them
# to having routing information for the unexicon subnetwork of
# 10.55.7.0/24 for PPTPD.  NetworkManager establishes the normal
# interfaces and PPTP or PPPOE client associations, but PPTPD and
# PPPOED establish the server associations.
#

set -x

unit=ferm
unit_dir=/run/nm-unexicon/$unit
[ -d $unit_dir ] || mkdir -p -- $unit_dir

case "$0" in
(./*|../*|[^./]*)   dispatcher="$(pwd)/$0" ;;
(*)		    dispatcher="$0" ;;
esac

prog=$(basename $0)
[ "$prog" != 'dhcpcd-run-hooks' ] || prog=dhcpcd

if [ "$prog" != dhcpcd ]; then
syslog ()
{
	local level="$1"
	[ -n "$level" ] && shift
	if [ -n "$*" ]; then
		if type logger >/dev/null 2>&1; then
			logger -i -t $prog -p daemon.${level:-info} "${interface:+$interface: }$*"
		fi
	fi
}
else
	syslog debug "Running dhcpcd-hook for unit $unit..."
fi

unit_remove ()
{
	systemctl reload-or-try-restart ${unit}.service
}

unit_add ()
{
	systemctl reload-or-restart ${unit}.service
}

unit_nm_add ()
{
	unit_add $@
}

unit_nm_rmv ()
{
	unit_remove $@
}

unit_nm_cha ()
{
	if [ -n "$DEVICE_IP_IFACE" ]; then
		unit_nm_add $@
	else
		unit_nm_rmv $@
	fi
}

# Network manager up command
unit_nm_up ()
{
	syslog debug "Responding to NM up command."
	unit_nm_add $@
}

# Network manager down command
unit_nm_down ()
{
	syslog debug "Responding to NM down command."
	unit_nm_rmv $@
}

# Network manager vpn-up command
unit_nm_vpn_up ()
{
	syslog debug "Responding to NM vpn-up command."
	unit_nm_add $@
}

# Network manager vpn-down command
unit_nm_vpn_down ()
{
	syslog debug "Responding to NM vpn-down command."
	unit_nm_rmv $@
}

# Network manager dhcp4-change command
unit_nm_dhcp4_change ()
{
	syslog debug "Responding to NM dhcp4-change command."
	unit_nm_cha $@
}

# Network manager dhcp6-change command
unit_nm_dhcp6_change ()
{
	syslog debug "Responding to NM dhcp6-change command."
	unit_nm_cha $@
}

# Network manager hostname command
unit_nm_hostname ()
{
	syslog debug "Responding to NM hostname command."
	:
}

unit_ppp_add ()
{
	unit_add $@
}

unit_ppp_rmv ()
{
	unit_remove $@
}

# PPP daemon ip-up command
unit_ppp_ip_up ()
{
	unit_ppp_add $@
}

# PPP daemon ip-down command
unit_ppp_ip_down ()
{
	unit_ppp_rmv $@
}

# PPP daemon ipv6-up command
unit_ppp_ipv6_up ()
{
	unit_ppp_add $@
}

# PPP daemon ipv6-down command
unit_ppp_ipv6_down ()
{
	unit_ppp_rmv $@
}

unit_dhcp_add ()
{
	unit_add $@
}

unit_dhcp_rmv ()
{
	unit_remove $@
}

# DHCP client daemon hook command
unit_dhcpcd_hook ()
{
	syslog debug "Executing $0..."
	case "$reason" in
	(PREINIT|CARRIER|INFORM|BOUND|RENEW|REBIND|REBOOT|IPV4LL|STATIC|3RDPARTY|TIMEOUT)
		unit_dhcp_add $interface ;;
	(EXPIRE|RELEASE|NAK|NOCARRIER|FAIL|STOP)
		unit_dhcp_rmv $interface ;;
	(DUMP|TEST|ROUTERADVERT)
		;;
	esac
}

# We just put this script in /etc/NetworkManager/dispatcher.d
# and then symbolic link it from /etc/ppp/ip{v6}-{up|down}.d/
# directories.  So, we decide what to do based on how we were
# called.

syslog debug "Dispatcher for $unit invoked..."
syslog debug "Dispatcher command is $0"

case "$dispatcher" in
	(*/dispatcher.d/*)
		syslog debug "Invoked as dispatcher."
		case "$2" in
		(up)		unit_nm_up		$@ ;;
		(down)		unit_nm_down		$@ ;;
		(vpn-up)	unit_nm_vpn_up		$@ ;;
		(vpn-down)	unit_nm_vpn_down	$@ ;;
		(dhcp4-change)	unit_nm_dhcp4_change	$@ ;;
		(dhcp6-change)	unit_nm_dhcp6_change	$@ ;;
		(hostname)	unit_nm_hostname	$@ ;;
		esac
		;;
	(*/ip-up.d/*)		unit_ppp_ip_up		$@ ;;
	(*/ip-down.d/*)		unit_ppp_ip_down	$@ ;;
	(*/ipv6-up.d/*)		unit_ppp_ipv6_up	$@ ;;
	(*/ipv6-down.d/*)	unit_ppp_ipv6_down	$@ ;;
	(*/dhcpcd-run-hooks)	unit_dhcpcd_hook	$@ ;;
esac

syslog debug "...done dispatcher for $unit."

